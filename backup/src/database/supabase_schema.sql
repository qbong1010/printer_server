-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.company (
  company_id integer NOT NULL DEFAULT nextval('company_company_id_seq'::regclass),
  company_name character varying NOT NULL,
  required_signature boolean DEFAULT false,
  CONSTRAINT company_pkey PRIMARY KEY (company_id)
);
CREATE TABLE public.menu_category (
  menu_category_id integer NOT NULL DEFAULT nextval('menu_category_menu_category_id_seq'::regclass),
  category_name character varying NOT NULL,
  indv_select_yn boolean DEFAULT true,
  CONSTRAINT menu_category_pkey PRIMARY KEY (menu_category_id)
);
CREATE TABLE public.menu_item (
  menu_item_id integer NOT NULL DEFAULT nextval('menu_item_menu_item_id_seq'::regclass),
  menu_name character varying NOT NULL,
  menu_price integer NOT NULL,
  menu_description text,
  menu_category_id integer NOT NULL,
  is_available boolean,
  menu_image_url character varying,
  CONSTRAINT menu_item_pkey PRIMARY KEY (menu_item_id),
  CONSTRAINT menu_item_menu_category_id_fkey FOREIGN KEY (menu_category_id) REFERENCES public.menu_category(menu_category_id)
);
CREATE TABLE public.menu_item_option_group (
  menu_item_id integer NOT NULL,
  option_group_id integer NOT NULL,
  is_required boolean DEFAULT false,
  display_order integer,
  CONSTRAINT menu_item_option_group_pkey PRIMARY KEY (menu_item_id, option_group_id),
  CONSTRAINT menu_item_option_group_menu_item_id_fkey FOREIGN KEY (menu_item_id) REFERENCES public.menu_item(menu_item_id),
  CONSTRAINT menu_item_option_group_option_group_id_fkey FOREIGN KEY (option_group_id) REFERENCES public.option_group(option_group_id)
);
CREATE TABLE public.option_group (
  option_group_id integer NOT NULL DEFAULT nextval('option_group_option_group_id_seq'::regclass),
  option_group_name text NOT NULL,
  allow_multiple boolean DEFAULT false,
  memo text,
  CONSTRAINT option_group_pkey PRIMARY KEY (option_group_id)
);
CREATE TABLE public.option_group_item (
  option_group_id integer NOT NULL,
  option_item_id integer NOT NULL,
  CONSTRAINT option_group_item_option_item_id_fkey FOREIGN KEY (option_item_id) REFERENCES public.option_item(option_item_id),
  CONSTRAINT option_group_item_option_group_id_fkey FOREIGN KEY (option_group_id) REFERENCES public.option_group(option_group_id)
);
CREATE TABLE public.option_item (
  option_item_id integer NOT NULL DEFAULT nextval('option_item_option_item_id_seq'::regclass),
  option_item_name text NOT NULL,
  option_price integer DEFAULT 0,
  memo text,
  CONSTRAINT option_item_pkey PRIMARY KEY (option_item_id)
);
CREATE TABLE public.order (
  order_id integer NOT NULL DEFAULT nextval('order_order_id_seq'::regclass),
  company_id integer NOT NULL,
  is_dine_in boolean DEFAULT true,
  total_price integer DEFAULT 0,
  created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
  is_printed boolean DEFAULT false,
  signature_data text,
  CONSTRAINT order_pkey PRIMARY KEY (order_id),
  CONSTRAINT order_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.company(company_id)
);
CREATE TABLE public.order_item (
  order_item_id integer NOT NULL DEFAULT nextval('order_item_order_item_id_seq'::regclass),
  order_id integer NOT NULL,
  menu_item_id integer NOT NULL,
  quantity integer DEFAULT 1,
  item_price integer NOT NULL,
  CONSTRAINT order_item_pkey PRIMARY KEY (order_item_id),
  CONSTRAINT order_item_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.order(order_id),
  CONSTRAINT order_item_menu_item_id_fkey FOREIGN KEY (menu_item_id) REFERENCES public.menu_item(menu_item_id)
);
CREATE TABLE public.order_item_option (
  order_item_option_id integer NOT NULL DEFAULT nextval('order_item_option_order_item_option_id_seq'::regclass),
  order_item_id integer NOT NULL,
  option_item_id integer NOT NULL,
  CONSTRAINT order_item_option_pkey PRIMARY KEY (order_item_option_id),
  CONSTRAINT order_item_option_order_item_id_fkey FOREIGN KEY (order_item_id) REFERENCES public.order_item(order_item_id),
  CONSTRAINT order_item_option_option_item_id_fkey FOREIGN KEY (option_item_id) REFERENCES public.option_item(option_item_id)
);

CREATE TABLE IF NOT EXISTS cache_meta (
  key text PRIMARY KEY,
  value text
);

-- app_logs table for error and event logging
CREATE TABLE public.app_logs (
    id bigint generated by default as identity,
    client_id text null,
    client_name text null,
    log_level text null,
    log_type text null,
    message text null,
    error_details text null,
    module_name text null,
    function_name text null,
    line_number integer null,
    app_version text null,
    os_info text null,
    created_at timestamp with time zone not null,
    constraint app_logs_pkey primary key (id)
);

-- RLS (Row Level Security) settings
alter table public.app_logs enable row level security;

-- Allow service_role key to perform all actions
create policy "Allow all for service role"
on public.app_logs for all
using (true)
with check (true);
